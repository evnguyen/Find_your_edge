<?php
/**
 * Created by PhpStorm.
 * User: evnguyen
 * Date: 5/5/2017
 * Time: 3:49 PM
 */

/**
 * @file
 * A custom module which controls the theme of the webform for the Find Your EDGE
 * quiz tool
 */

/**
 * Implements hook_page_build().
 * Builds the breadcrumbs for the confirmation page.
 * Note this builds the breadcrumbs according to the nid.
 */
function uw_find_your_edge_page_build() {
  $path = current_path();
  if ($path == "node/19/done") {
    $breadcrumb = drupal_get_breadcrumb();
    $breadcrumb[1] = l(t('Find your EDGE'), '/find-your-edge');
    array_pop($breadcrumb);
    drupal_set_breadcrumb($breadcrumb);
  }
}

/**
 * @param $theme_registry
 * Changes the confirmation page's theme.
 */
function uw_find_your_edge_theme_registry_alter(&$theme_registry) {
  $value = &drupal_static('current_sid');
  //WMS-DEV nid = 36
  $theme_registry['webform_confirmation_19'] = array(
    'template' => 'webform-confirmation-19',
    'path' => drupal_get_path('module', 'uw_find_your_edge') . '/templates',
    'theme path' => drupal_get_path('module', 'uw_find_your_edge'),
    'type' => 'theme',
    'variables' => array('test' => $value),
  );
}

/**
 * @param $nodes
 * @param $types
 * Inplements Hook_node_load().
 */
function uw_find_your_edge_node_load($nodes, $types) {
  //dsm($nodes);
  if (isset($nodes[19]->title) && $nodes[19]->title == 'Find your EDGE') {
    drupal_add_css(drupal_get_path('module', 'uw_find_your_edge') .
      '/fye_style.css', array('group' => CSS_DEFAULT, 'weight' => 99));
  }
}

/**
 * Defines a new field type for the webform.
 */
function uw_find_your_edge_webform_component_info() {
  $components = array();
  $components['btn'] = array(
    'label' => t('Btn Test'),
    'description' => t('Create a new button with similar properties to a radio buttton'),
    'features' => array(
      'csv' => TRUE,
      'email' => TRUE,
      'email_address' => FALSE,
      'email_name' => FALSE,
      'required' => FALSE,
      'title_display' => TRUE,
      'title_inline' => FALSE,
      'conditional' => FALSE,
      'group' => FALSE,
      'spam_analysis' => FALSE,
      'attachment' => FALSE,
    ),
    'file' => 'btn_test.inc',
  );
  return $components;
}

function uw_find_your_edge_webform_submission_presave($node, $submission) {
  $sid = &drupal_static('current_sid');
  //global $sid;
  $sid = $submission->sid;
  dsm("Inside hook_presave");
  if (isset($node) && $node->nid == 19) {
    //TODO: Need to be able to check if user has gone back to previous question. Check if index 11 is NULL
    if(count($submission->data) == 12){
      //dsm($submission);
      //dsm($submission->data[11][0]);
      //TODO: Decide whether or not to do processing here or inside the template file
    }
  }
}

function uw_find_your_edge_menu() {
  $items = array();
  $items['node/%webform_menu/webform/ruleset'] = array(
    'title' => 'Ruleset',
    'page callback' => 'webform_ruleset_get_form',  //The function that gets called when page loads
    'page arguments' => array(1),
    'access callback' => 'webform_node_update_access',
    'access arguments' => array(1),
    'file' => 'webform_ruleset.inc',
    'weight' => 1,
    'type' => MENU_LOCAL_TASK,
  );
  return $items;
}

function uw_find_your_edge_token_info() {
  $info['types']['custom'] = array(
    'name' => t('Custom'),
    'description' => t('Custom tokens.'),
  );
  $info['tokens']['custom']['fname'] = array(
    'name' => t('First name'),
    'description' => t('First name re placer for fname '),
  );
  $info['tokens']['custom']['lname'] = array(
    'name' => t('Last name'),
    'description' => t('Last name re placer for lname '),
  );
  return $info;
}

function uw_find_your_edge_tokens($type, $tokens, array $data = array(), array $options = array()) {
  //global $sid;
  $replacements = array();
  //dsm($tokens);
  $sanitize = !empty($options['sanitize']);
  foreach ($tokens as $name => $original) {
    switch ($name) {
      case 'fname':
        //dsm($data);
        //$sid = &drupal_static('current_sid');
        $replacements[$original] = "TESTNAME";
        break;
    }
  }
  return $replacements;
}