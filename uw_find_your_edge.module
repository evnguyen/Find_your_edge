<?php
/**
 * Created by PhpStorm.
 * User: evnguyen
 * Date: 5/5/2017
 * Time: 3:49 PM
 */

/**
 * @file
 * A custom module which controls the theme of the webform for the Find Your EDGE
 * quiz tool
 */

/**
 * Implements hook_page_build().
 * Builds the breadcrumbs for the confirmation page.
 * Note this builds the breadcrumbs according to the nid.
 */
function uw_find_your_edge_page_build() {
  $path = current_path();
  $nid = variable_get('uw_find_your_edge_nid', 19);
  if ($path == 'node/'. $nid .'/done') {
    $breadcrumb = drupal_get_breadcrumb();
    $breadcrumb[1] = l(t('Find your EDGE'), '/find-your-edge');
    array_pop($breadcrumb);
    drupal_set_breadcrumb($breadcrumb);
  }
}

/**
 * @param $theme_registry
 * Changes the confirmation page's theme.
 */
function uw_find_your_edge_theme_registry_alter(&$theme_registry) {
  //WMS-DEV nid = 36
  $nid = variable_get('uw_find_your_edge_nid', 19);
  $node = menu_get_object();
  //dsm($nid);
  //TODO: uw_find_your_edge_nid works but cache must be cleared
  $theme_registry['webform_confirmation_' . $nid] = array(
    'template' => 'webform-confirmation-quiz',
    'path' => drupal_get_path('module', 'uw_find_your_edge') . '/templates',
    'theme path' => drupal_get_path('module', 'uw_find_your_edge'),
    'type' => 'theme',
  );
  //dsm($theme_registry);
}

/**
 * @param $nodes
 * @param $types
 * Inplements Hook_node_load().
 */
function uw_find_your_edge_node_load($nodes, $types) {
  //dsm($nodes);
  $nid = variable_get('uw_find_your_edge_nid', 19);
  if (isset($nodes[$nid]) && $nodes[$nid]->nid == $nid) {
    drupal_add_css(drupal_get_path('module', 'uw_find_your_edge') .
      '/fye_style.css', array('group' => CSS_DEFAULT, 'weight' => 99));
  }
}

/**
 * @return array
 * Implements hook_menu().
 */
function uw_find_your_edge_menu() {
  $items = array();
  $items['node/%webform_menu/webform/ruleset'] = array(
    'title' => 'Rulesets',
    'page callback' => 'webform_ruleset_get_form',  //The function that gets called when page loads
    'page arguments' => array(1),
    'access callback' => 'uw_find_your_edge_access',
    'access arguments' => array(1),
    'file' => 'webform_ruleset.inc',
    'weight' => 1,
    'type' => MENU_LOCAL_TASK,
  );

  $items['admin/config/content/uw_find_your_edge_config'] = array(
    'title' => 'Find Your EDGE Config',
    'description' => 'Configure the settings for the Find Your EDGE quiz tool.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('uw_find_your_edge_config_form'),
    'access arguments' => array('access administration pages'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

function uw_find_your_edge_config_form($form, &$form_state) {
  $form['uw_find_your_edge_nid'] = array(
    '#type' => 'textfield',
    '#title' => t('Target Node ID'),
    '#size' => 5,
    '#maxlength' => 5,
    '#description' => t('Target which webform for the EDGE quiz tool'),
    '#default_value' => variable_get('uw_find_your_edge_nid', 19),
    '#required' => TRUE,
  );
  drupal_theme_rebuild();
  return system_settings_form($form);
}

/**
 * Checks whether the webform is the Find Your EDGE quiz tool
 * If not, then do not show the new tab
 * @param $node
 *
 * @return bool
 */
function uw_find_your_edge_access($node) {
  $nid = variable_get('uw_find_your_edge_nid', 19);
  return ($node->nid == $nid);
}

/**
 * @return mixed
 * Implements hook_token_info().
 */
function uw_find_your_edge_token_info() {
  $info['types']['find_your_edge'] = array(
    'name' => t('Custom'),
    'description' => t('Tokens for the Find Your EDGE tool.'),
  );
  $info['tokens']['find_your_edge']['component1'] = array(
    'name' => t('Component 1 result'),
    'description' => t('The results for component 1.'),
  );
  $info['tokens']['find_your_edge']['component1_description'] = array(
    'name' => t('Component 1 description'),
    'description' => t('The description text for the results of component 1.'),
  );
  $info['tokens']['find_your_edge']['component2'] = array(
    'name' => t('Component 2 result'),
    'description' => t('The results for component 2.'),
  );
  $info['tokens']['find_your_edge']['component2_description'] = array(
    'name' => t('Component 2 description'),
    'description' => t('The description text for the results of component 2.'),
  );
  $info['tokens']['find_your_edge']['component3a'] = array(
    'name' => t('Component 3a result'),
    'description' => t('The results for component 3a.'),
  );
  $info['tokens']['find_your_edge']['component3a_description'] = array(
    'name' => t('Component 3a description'),
    'description' => t('The description text for the results of component 3a.'),
  );
  $info['tokens']['find_your_edge']['component3b'] = array(
    'name' => t('Component 3b result'),
    'description' => t('The results for component 3b.'),
  );
  $info['tokens']['find_your_edge']['component3b_description'] = array(
    'name' => t('Component 3b description'),
    'description' => t('The description text for the results of component 3b.'),
  );
  $info['tokens']['find_your_edge']['component3c'] = array(
    'name' => t('Component 3c result'),
    'description' => t('The results for component 3c.'),
  );
  $info['tokens']['find_your_edge']['component3c_description'] = array(
    'name' => t('Component 3c description'),
    'description' => t('The description text for the results of component 3c.'),
  );
  $info['tokens']['find_your_edge']['component3_pd'] = array(
    'name' => t('Component 3 PD result'),
    'description' => t('The results for component 3 PD.'),
  );
  $info['tokens']['find_your_edge']['component3_pd_description'] = array(
    'name' => t('Component 3 PD description'),
    'description' => t('The description text for the results of component 3 PD.'),
  );
  $info['tokens']['find_your_edge']['component4'] = array(
    'name' => t('Component 4 result'),
    'description' => t('The results for component 4.'),
  );
  $info['tokens']['find_your_edge']['component4_description'] = array(
    'name' => t('Component 4 description'),
    'description' => t('The description text for the results of component 4.'),
  );
  return $info;
}

/**
 * @param $type
 * @param $tokens
 * @param array $data
 * @param array $options
 *
 * @return array
 * Implements hook_tokens().
 */
function uw_find_your_edge_tokens($type, $tokens, array $data = array(), array $options = array()) {
  $replacements = array();
  $sanitize = !empty($options['sanitize']);

  if (isset($_GET['sid'])) {
    $sid = $_GET['sid'];
    $query = db_select('find_your_edge_results', 'fyer')
      ->fields('fyer')
      ->condition('sid', $sid)
      ->execute()
      ->fetchAll();
  }

  foreach ($tokens as $name => $original) {
    if (isset($query) && count($query) > 0) {
      switch ($name) {
        case 'component1':
          $replacements[$original] = $query[0]->component1;
          break;
        case 'component1_description':
          $replacements[$original] = $query[0]->component1_descr;
          break;
        case 'component2':
          $replacements[$original] = $query[0]->component2;
          break;
        case 'component2_description':
          $replacements[$original] = $query[0]->component2_descr;
          break;
        case 'component3a':
          $replacements[$original] = $query[0]->component3a;
          break;
        case 'component3a_description':
          $replacements[$original] = $query[0]->component3a_descr;
          break;
        case 'component3b':
          $replacements[$original] = $query[0]->component3b;
          break;
        case 'component3b_description':
          $replacements[$original] = $query[0]->component3b_descr;
          break;
        case 'component3c':
          $replacements[$original] = $query[0]->component3c;
          break;
        case 'component3c_description':
          $replacements[$original] = $query[0]->component3c_descr;
          break;
        case 'component3_pd':
          $replacements[$original] = $query[0]->component3_pd;
          break;
        case 'component3_pd_description':
          $replacements[$original] = $query[0]->component3_pd_descr;
          break;
        case 'component4':
          $replacements[$original] = $query[0]->component4;
          break;
        case 'component4_description':
          $replacements[$original] = $query[0]->component4_descr;
          break;
      }
    }
  }
  return $replacements;
}